from telethon_handler.create_client import client
from telethon import events
from deepseek.deepsekk import analyze_with_deepseek
from news import *
from aiogram import Bot
from config import config

bot = Bot(token=config.tg_bot_token)

# –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å
channel_ids = [-1001203560567, -1002208140065]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
last_message_ids = {channel_id: None for channel_id in channel_ids}


async def get_channel_messages(client, channel_id, limit=5):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 'limit' —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞."""
    messages = []
    async for message in client.iter_messages(channel_id, limit=limit):
        messages.append(message.text)
    return messages

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@client.on(events.NewMessage(chats=channel_ids))
async def new_message_handler(event):
    channel_id = event.chat_id
    message_id = event.message.id

    if last_message_ids[channel_id] is None or message_id > last_message_ids[channel_id]:
        last_message_ids[channel_id] = message_id  # –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

        latest_messages = await get_channel_messages(client, channel_id, limit=5)

        if latest_messages:
            analysis_result = await analyze_with_deepseek(latest_messages)
            set_news_text(analysis_result)
            await bot.send_message(chat_id=-1002467387559, text=f"{analysis_result}")
            #print(f"üîç Deepseek Analysis for channel {channel_id}:\n{analysis_result}")


# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
#client.start()

"""async def main():
    await client.start()  # –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–µ—Å—Å–∏–∏
    messages = await get_channel_messages(channel_id)

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è
    for msg in messages:
        print(msg)

    await client.disconnect()  # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã

with client:
    client.loop.run_until_complete(main())
"""